.input-component {
  margin: 5px;
  text-align: center;

  .select {
    position: relative;
    border: none;
    background: linear-gradient(to left, rgb(37, 20, 75), rgb(15, 18, 77));
    width: fit-content;
    border-radius: 10px;
    transition: width 0.2s ease-in-out;
    -moz-transition: width 0.2s ease-in-out;
    -webkit-transition: width 0.2s ease-in-out;
    -o-transition: width 0.2s ease-in-out;

    &.multi {
      .value {
        padding: 5px 0 5px 15px;

        .plus, .arrow {
          height: fit-content;
          display: flex;
          margin: auto 0;
        }

        .values {
          display: flex;
          flex-direction: row;

          .multi-value {
            border: 1px white solid;
            padding: 5px 10px;
            border-radius: 10px;
            margin: 5px;
          }
        }
      }
    }

    &.expanded {
      .options {
        max-height: 100vh;
      }
    }

    &.radius-expanded {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }

    .value {
      transition: width 0.2s ease-in-out;
      -moz-transition: width 0.2s ease-in-out;
      -webkit-transition: width 0.2s ease-in-out;
      -o-transition: width 0.2s ease-in-out;
      display: flex;
      flex-direction: row;
      cursor: pointer;
      padding: 15px 0 15px 25px;
      box-sizing: border-box;
      width: 100%;

      &.empty {
        padding: 15px 0 15px 25px;
      }

      .arrow, .plus {
        height: 100%;
        padding: 0 10px 0 15px;

        img {
          transition: transform 0.5s ease-in-out;
        }
      }

      .plus.rotate {
        img {
          transform: rotate(360deg);
        }
      }
    }

    .options {
      z-index: 5;
      max-height: 0;
      overflow: hidden;
      position: absolute;
      transition: max-height 0.5s ease-in-out;
      box-sizing: border-box;
      width: 100%;

      .option {
        transition: background 0.2s ease-in-out;

        &:hover {
          background: linear-gradient(to left, mix(rgb(37, 20, 75), white, 95%), mix(rgb(15, 18, 77), white, 95%)) !important;
        }

        border: none;
        background: linear-gradient(to left, rgb(37, 20, 75), rgb(15, 18, 77));
        width: 100%;
        border-radius: 0;
        cursor: pointer;
        padding: 15px 0;
        display: flex;
        flex-direction: row;
        text-align: left;

        span {
          margin-left: 20px;
        }

        &.selected {
          justify-content: space-between;
        }

        .tick {
          margin-right: 10px;
        }

        &:last-of-type {
          border-bottom-left-radius: 10px;
          border-bottom-right-radius: 10px;
        }
      }
    }

  }


  .btn {
    background: linear-gradient(to left, rgb(37, 20, 75), rgb(15, 18, 77));
    padding: 15px 50px;
    border: none;

    &.loading {
      &:hover {
        border: none;
        outline: none;
      }

      background-size: 400% 400%;
      animation: loading-gradient 10s infinite;
      cursor: not-allowed;
    }

    &:focus, &focus-visible {
      outline: none;
    }
  }

  @keyframes loading-gradient {
    0% {
      background-position: 0% 50%, 100% 50%;
    }
    50% {
      background-position: 100% 50%, 0% 50%;
    }
    100% {
      background-position: 0% 50%, 100% 50%;
    }
  }


  .toggle {
    background: linear-gradient(to left, rgb(37, 20, 75), rgb(15, 18, 77));
    border: none;
    border-radius: 10px;
    padding: 4px;

    .inside {
      width: 30px;
      height: 30px;
      border-radius: 10px;
      background: #ffffff;
      transition: margin 0.2s ease-out; /* add transition property here */
    }

    &.on {
      .inside {
        margin-left: 30px;
        margin-right: 0;
      }
    }

    &.off {
      .inside {
        margin-left: 0;
        margin-right: 30px;
      }
    }
  }


  input[type="text"] {
    border: none;
    text-align: center;
    border-radius: 10px;
    padding: 15px 25px;
    font-size: 16px;
    width: 100%;
    box-sizing: border-box;
    position: relative;
    background: linear-gradient(to left, rgb(13, 6, 29), rgb(15, 18, 77));
    color: white;

    &:focus {
      outline: none;
      border: none;
    }

    &::placeholder {
      color: rgb(70, 70, 70);
      position: absolute;
      text-align: center;
      width: 100%;
      left: 0;
      top: 50%;
      transform: translateX(0) translateY(-50%);
      transition: transform 0.3s ease-in-out;
      -moz-transition: transform 0.3s ease-in-out;
      transition-delay: 0s; /* Default delay for non-Firefox browsers */

      @-moz-document url-prefix() {
        /* Firefox-only styles */
        transition-delay: 0.05s; /* Delay transition for Firefox */
      }
    }

    &:focus::placeholder {
      transform: translateX(-150%) translateY(-50%);
    }
  }

  .number {
    display: flex;
    flex-direction: row;
    border: none;
    border-radius: 10px;
    width: 100%;
    box-sizing: border-box;
    position: relative;
    background: linear-gradient(to left, rgb(37, 20, 75), rgb(15, 18, 77));


    input {
      background: transparent;
      border: none;
      border-radius: 4px;
      padding: 15px 25px;
      font-size: 16px;
      width: 100%;
      box-sizing: border-box;
      position: relative;
    }

    .buttons {
      display: flex;
      flex-direction: column;
      justify-content: space-around;
      align-items: center;
      height: 100%;
      background: rgba(255, 255, 255, 0.025);
      border-radius: 0 10px 10px 0;
      cursor: pointer;

      .button {
        border-radius: 0;
        line-height: 6.67px;
        margin: auto;
        user-select: none;

        &:hover {
          background: rgba(255, 255, 255, 0.05);
        }

        &:first-of-type {
          border-top-right-radius: 10px;
        }

        &:last-of-type {
          border-bottom-right-radius: 10px;
        }
      }
    }
  }
}
